# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "master" branch
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          echo Add other actions to build,
          echo test, and deploy your project.
  
  # flutter-actions-android:
  #   name: flutter related actions for android
  #   runs-on: ubuntu-latest
  #   steps:
  #   - uses: actions/checkout@v3
  #   - uses: actions/setup-java@v2
  #     with:
  #       distribution: 'zulu'
  #       java-version: '11'
  #   - uses: subosito/flutter-action@v2
  #     with:
  #       flutter-version: '3.0.5'
  #       channel: 'stable'
  #   - run: flutter --version
  #   - run: flutter pub get
  #   - run: flutter build appbundle
  #   - uses: r0adkll/sign-android-release@v1
  #     name: Sign app AAB
  #     # ID used to access action output
  #     id: sign_app
  #     with:
  #       releaseDirectory: build/app/outputs/bundle/release
  #       signingKeyBase64: ${{ secrets.SIGNING_KEY }}
  #       alias: upload
  #       keyStorePassword: ${{ secrets.KEY_STORE_PASSWORD }}
  #   - uses: muhamedzeema/appgallery-deply-action@main
  #     with:
  #       client-id: ${{secrets.HUAWEI_CLIENT_ID}}
  #       client-key: ${{secrets.HUAWEI_CLIENT_KEY}}
  #       app-id: ${{secrets.HUAWEI_APP_ID}}
  #       file-extension: "aab"
  #       file-path: ${{steps.sign_app.outputs.signedReleaseFile}}
  #       submit: true
  #   - uses: r0adkll/upload-google-play@v1.0.17
  #     with:
  #       serviceAccountJsonPlainText: ${{ secrets.SERVICE_ACCOUNT_JSON }}
  #       packageName: co.easystore.pos
  #       releaseFiles: ${{steps.sign_app.outputs.signedReleaseFile}}
  #       track: internal
  #       releaseName: v1.0.1
  flutter-actions-ios:
    name: flutter related actions for ios
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v3
    - uses: yukiarrr/ios-build-action@v1.5.0
      with:
        project-path: ios/Runner.xcodeproj
        p12-base64: ${{ secrets.P12_BASE64 }}
        mobileprovision-base64: ${{ secrets.MOBILEPROVISION_BASE64 }}
        code-signing-identity: iOS Distribution
        team-id: Y6F6QCVDBY
        export-method: ad-hoc
