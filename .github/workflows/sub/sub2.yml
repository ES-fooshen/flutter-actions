# This is a basic workflow to help you get started with Actions

name: Sub 2 CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "master" branch
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # # This workflow contains a single job called "build"
  # build:
  #   # The type of runner that the job will run on
  #   runs-on: ubuntu-latest

  #   # Steps represent a sequence of tasks that will be executed as part of the job
  #   steps:
  #     # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
  #     - uses: actions/checkout@v3

  #     # Runs a single command using the runners shell
  #     - name: Run a one-line script
  #       run: echo Hello, world!

  #     # Runs a set of commands using the runners shell
  #     - name: Run a multi-line script
  #       run: |
  #         echo Add other actions to build,
  #         echo test, and deploy your project.
  
  # flutter-actions-android:
  #   name: flutter related actions for android
  #   runs-on: ubuntu-latest
  #   steps:
  #   - uses: actions/checkout@v4
  #   - uses: actions/setup-java@v4
  #     with:
  #       distribution: 'zulu'
  #       java-version: '11'
  #   - name: Set versions
  #     run: |
  #       version=$(grep '^version:' pubspec.yaml | awk -F"[:+]" '{print $2}' | xargs)
  #       build_number=$(grep '^version:' pubspec.yaml | awk -F"+" '{print $2}')
  #       echo "Version: $version"
  #       echo "Build number: $build_number"

  #       echo "version=$version" >> $GITHUB_ENV
  #       echo "build_number=$build_number" >> $GITHUB_ENV

  #   - name: change env
  #     run: |
  #       sed -i "s/String displayText = 'Hello World';/String displayText = 'CI Hello World';/" lib/main.dart
        
  #   - uses: subosito/flutter-action@v2
  #     with:
  #       flutter-version: '3.22.3'
  #       channel: 'stable'
  #   - run: flutter --version
  #   - run: flutter pub get
  #   - run: flutter build apk --release
  #   - name: List IPA Directory Contents
  #     run: |
  #       ls -l build/app/outputs/flutter-apk
  #   - uses: r0adkll/sign-android-release@v1
  #     name: Sign app AAB
  #     # ID used to access action output
  #     id: sign_app
  #     with:
  #       releaseDirectory: build/app/outputs/flutter-apk
  #       signingKeyBase64: ${{ secrets.SIGNING_KEY }}
  #       alias: upload
  #       keyStorePassword: ${{ secrets.KEY_STORE_PASSWORD }}
  #     env:
  #         BUILD_TOOLS_VERSION: "34.0.0"
    
  #   - uses: actions/upload-artifact@v4
  #     with:
  #       # Name of the artifact to upload.
  #       # Optional. Default is 'artifact'
  #       name: ${{ env.version }}

  #       # A file, directory or wildcard pattern that describes what to upload
  #       # Required.
  #       path: build/app/outputs/flutter-apk/app-release-signed.apk

  #       # Duration after which artifact will expire in days. 0 means using default retention.
  #       # Minimum 1 day.
  #       # Maximum 90 days unless changed from the repository settings page.
  #       # Optional. Defaults to repository settings.
  #       retention-days: 1

  #       # If true, an artifact with a matching name will be deleted before a new one is uploaded.
  #       # If false, the action will fail if an artifact for the given name already exists.
  #       # Does not fail if the artifact does not exist.
  #       # Optional. Default is 'false'
  #       overwrite: true


  #   # - uses: muhamedzeema/appgallery-deply-action@main
  #   #   with:
  #   #     client-id: ${{secrets.HUAWEI_CLIENT_ID}}
  #   #     client-key: ${{secrets.HUAWEI_CLIENT_KEY}}
  #   #     app-id: ${{secrets.HUAWEI_APP_ID}}
  #   #     file-extension: "aab"
  #   #     file-path: ${{steps.sign_app.outputs.signedReleaseFile}}
  #   #     submit: true
  #   # - uses: r0adkll/upload-google-play@v1.1.3
  #   #   with:
  #   #     serviceAccountJsonPlainText: ${{ secrets.SERVICE_ACCOUNT_JSON }}
  #   #     packageName: co.easystore.pos
  #   #     releaseFiles: ${{steps.sign_app.outputs.signedReleaseFile}}
  #   #     track: internal
  #   #     changesNotSentForReview: true
  #   #     whatsNewDirectory: android/distribution/whatsnew
  
  
  flutter-actions-ios:
    name: flutter related actions for ios
    runs-on: macos-15
    steps:
    - name: Select Xcode 16
      run: sudo xcode-select -s /Applications/Xcode_16.2.app

    - name: Verify Xcode Version
      run: xcodebuild -version  # Ensure it's using Xcode 16 with iOS 18 SDK

    - name: Verify SDK Version
      run: xcodebuild -showsdks  # Ensure iOS 18 SDK is listed

    - uses: actions/checkout@v4
    - uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.29.0'
        channel: 'stable'
    - run: flutter --version
    - run: flutter pub get
    
    - name: Build IPA
      run: |
        xcodebuild -workspace ios/Runner.xcworkspace \
          -scheme Runner \
          -configuration Release \
          -sdk iphoneos \
          -archivePath $(PWD)/build/archive/runner.xcarchive \
          build \
          archive \
          -allowProvisioningUpdates
   

    
